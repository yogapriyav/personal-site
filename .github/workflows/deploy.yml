name: Build and Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch: #allows manual trigger?

env:
  DOCKER_IMAGE: yogapriyav/yogapriya-site
  DEPLOYMENT_NAME: yogapriya-site
  CONTAINER_NAME: nextjs

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup docker buildx
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3

    # Login to docker hub
    - name: Login to Docker hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push Docker image
    - name: Build and push docker image
      uses: docker/build-push-action@v5
      with:
        context: ./app
        file: ./app/Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        # cache-from: type=registry, ref=${{ env.DOCKER_IMAGE }}:latest
        # cache-to: type=inline

    # Setup kubectl
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: "latest"

    # Configure kubectl
    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    # Update deployment with new image
    - name: Deploy to kubernetes
      run: |
        kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
          ${{ env.CONTAINER_NAME }}=${{ env.DOCKER_IMAGE }}:${{ github.sha }} \
          --record

          # Wait for rollout to complete
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} --timeout=5m

    # Verify deployment
    - name: Verify deployment
      run: |
        kubectl get deployment ${{ env.DEPLOYMENT_NAME }}
        kubectl get pods -l app=personal-site
    